// Generated by CoffeeScript 1.3.1
(function() {
  var CollapsedSizes, ExpandedSizes, UpdateLabels, UpdateNumeralSizes, box, clone, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  clone = root.utility.clone;

  box = root.utility.box;

  CollapsedSizes = {
    crossings: 10,
    numComponents: 5,
    index: 5
  };

  ExpandedSizes = {
    crossings: 100,
    numComponents: 50,
    index: 50
  };

  root.AppInit = function() {
    var c, gl, height, width;
    root.CurrentSizes = clone(ExpandedSizes);
    c = $("canvas").get(0);
    gl = c.getContext("experimental-webgl", {
      antialias: true
    });
    if (!gl.getExtension("OES_texture_float")) {
      glerr("Your browser does not support floating-point textures.");
    }
    if (!gl.getExtension("OES_standard_derivatives")) {
      glerr("Your browser does not support GLSL derivatives.");
    }
    width = parseInt($("#overlay").css('width'));
    height = parseInt($("#overlay").css('height'));
    return root.renderer = new root.Renderer(gl, width, height);
  };

  root.MouseClick = function() {
    return renderer.click();
  };

  root.UpdateLabels = UpdateLabels = function() {
    var labels;
    labels = root.renderer.getCurrentLinkInfo();
    $("#crossings").text(labels.crossings);
    $("#subscript").text(labels.index);
    return $("#superscript").text(labels.numComponents);
  };

  root.OnKeyDown = function(keyname) {
    switch (keyname) {
      case 'left':
        return root.renderer.moveSelection(-1);
      case 'right':
        return root.renderer.moveSelection(+1);
    }
  };

  root.AnimateNumerals = function() {
    var A, B, duration;
    if ((root.collapse != null) || (root.expand != null)) {
      return;
    }
    duration = 0.25 * root.renderer.transitionMilliseconds;
    root.collapse = A = new TWEEN.Tween(root.CurrentSizes).to(CollapsedSizes, duration).easing(TWEEN.Easing.Quintic.In).onUpdate(UpdateNumeralSizes);
    root.expand = B = new TWEEN.Tween(root.CurrentSizes).to(ExpandedSizes, duration).easing(TWEEN.Easing.Quintic.In).onUpdate(UpdateNumeralSizes);
    A.chain(B);
    root.UpdateLabels = null;
    root.collapse.onComplete(function() {
      root.UpdateLabels = UpdateLabels;
      return root.collapse = null;
    });
    root.expand.onComplete(function() {
      return root.expand = null;
    });
    return A.start();
  };

  UpdateNumeralSizes = function() {
    $("#crossings").css('font-size', root.CurrentSizes.crossings);
    $("#superscript").css('font-size', root.CurrentSizes.numComponents);
    return $("#subscript").css('font-size', root.CurrentSizes.index);
  };

}).call(this);
